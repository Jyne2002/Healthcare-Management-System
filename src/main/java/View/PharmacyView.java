package View;

import Controller.PharmacyController;
import Model.PharmacyItem;
import Home.Home;
import main.PatientMain;

import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;


public class PharmacyView extends javax.swing.JFrame {
    private PharmacyController controller = new PharmacyController();
    /**
     * Creates new form PharmacyView
     */
    public PharmacyView() {
    initComponents();
    controller = new PharmacyController();  // Initialize controller here
    
    // Add action listeners to buttons
    AddBtn.addActionListener(evt -> addBtnActionPerformed(evt));
    UpdateBtn.addActionListener(evt -> updateBtnActionPerformed(evt));
    DeleteBtn.addActionListener(evt -> deleteBtnActionPerformed(evt));


    // Load existing data into the table
    updateTable();
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Header = new javax.swing.JPanel();
        HeaderTxt = new javax.swing.JLabel();
        SearchBox = new javax.swing.JTextField();
        SearchBtn = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        TableScrollPane1 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Buttons = new javax.swing.JPanel();
        AddBtn = new javax.swing.JButton();
        UpdateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        Sidebar = new javax.swing.JPanel();
        SideTxt = new javax.swing.JLabel();
        Homebtn = new javax.swing.JButton();
        PatientBtn = new javax.swing.JButton();
        DoctorBtn = new javax.swing.JButton();
        PharmacyBtn = new javax.swing.JButton();
        AppoinmentBtn = new javax.swing.JButton();
        ReportsBtn = new javax.swing.JButton();
        NotiPatientBtn = new javax.swing.JButton();
        NotiPharmacistsBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Header.setBackground(new java.awt.Color(204, 204, 204));

        HeaderTxt.setBackground(new java.awt.Color(0, 0, 0));
        HeaderTxt.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        HeaderTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        HeaderTxt.setText("Pharmacy Inventory");
        HeaderTxt.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        SearchBox.setToolTipText("Search By Name or ID");
        SearchBox.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        SearchBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBoxActionPerformed(evt);
            }
        });

        SearchBtn.setBackground(new java.awt.Color(204, 204, 255));
        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        btnReset.setBackground(new java.awt.Color(204, 204, 255));
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HeaderLayout = new javax.swing.GroupLayout(Header);
        Header.setLayout(HeaderLayout);
        HeaderLayout.setHorizontalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(HeaderTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 708, Short.MAX_VALUE)
                    .addGroup(HeaderLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, 411, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addContainerGap())
        );
        HeaderLayout.setVerticalGroup(
            HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HeaderTxt)
                .addGap(18, 18, 18)
                .addGroup(HeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchBtn)
                    .addComponent(btnReset))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Table.setBackground(new java.awt.Color(204, 255, 255));
        Table.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price (LKR)", "Exp Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TableScrollPane1.setViewportView(Table);

        Buttons.setBackground(new java.awt.Color(204, 204, 204));

        AddBtn.setBackground(new java.awt.Color(204, 204, 255));
        AddBtn.setText("Add");

        UpdateBtn.setBackground(new java.awt.Color(204, 204, 255));
        UpdateBtn.setText("Update");

        DeleteBtn.setBackground(new java.awt.Color(153, 51, 0));
        DeleteBtn.setText("Delete");

        javax.swing.GroupLayout ButtonsLayout = new javax.swing.GroupLayout(Buttons);
        Buttons.setLayout(ButtonsLayout);
        ButtonsLayout.setHorizontalGroup(
            ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ButtonsLayout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addComponent(AddBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addComponent(UpdateBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addGap(40, 40, 40)
                .addComponent(DeleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                .addContainerGap(151, Short.MAX_VALUE))
        );
        ButtonsLayout.setVerticalGroup(
            ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ButtonsLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(ButtonsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddBtn)
                    .addComponent(UpdateBtn)
                    .addComponent(DeleteBtn))
                .addGap(18, 18, 18))
        );

        Sidebar.setBackground(new java.awt.Color(204, 204, 204));

        SideTxt.setBackground(new java.awt.Color(255, 255, 255));
        SideTxt.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        SideTxt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SideTxt.setText("MediCarePlus");
        SideTxt.setToolTipText("");

        Homebtn.setBackground(new java.awt.Color(0, 103, 206));
        Homebtn.setForeground(new java.awt.Color(204, 255, 255));
        Homebtn.setText("Home");
        Homebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomebtnActionPerformed(evt);
            }
        });

        PatientBtn.setBackground(new java.awt.Color(0, 103, 206));
        PatientBtn.setForeground(new java.awt.Color(204, 255, 255));
        PatientBtn.setText("Patient");
        PatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PatientBtnActionPerformed(evt);
            }
        });

        DoctorBtn.setBackground(new java.awt.Color(0, 103, 206));
        DoctorBtn.setForeground(new java.awt.Color(204, 255, 255));
        DoctorBtn.setText("Doctor");
        DoctorBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DoctorBtnActionPerformed(evt);
            }
        });

        PharmacyBtn.setBackground(new java.awt.Color(0, 103, 206));
        PharmacyBtn.setForeground(new java.awt.Color(204, 255, 255));
        PharmacyBtn.setText("Pharmacy");
        PharmacyBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PharmacyBtnActionPerformed(evt);
            }
        });

        AppoinmentBtn.setBackground(new java.awt.Color(0, 103, 206));
        AppoinmentBtn.setForeground(new java.awt.Color(204, 255, 255));
        AppoinmentBtn.setText("Appoinment");
        AppoinmentBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppoinmentBtnActionPerformed(evt);
            }
        });

        ReportsBtn.setBackground(new java.awt.Color(0, 103, 206));
        ReportsBtn.setForeground(new java.awt.Color(204, 255, 255));
        ReportsBtn.setText("Reports");
        ReportsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportsBtnActionPerformed(evt);
            }
        });

        NotiPatientBtn.setBackground(new java.awt.Color(0, 103, 206));
        NotiPatientBtn.setForeground(new java.awt.Color(204, 255, 255));
        NotiPatientBtn.setText("Notify Pharmacists");
        NotiPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotiPatientBtnActionPerformed(evt);
            }
        });

        NotiPharmacistsBtn.setBackground(new java.awt.Color(0, 103, 206));
        NotiPharmacistsBtn.setForeground(new java.awt.Color(204, 255, 255));
        NotiPharmacistsBtn.setText("Notify Patient");
        NotiPharmacistsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NotiPharmacistsBtnActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout SidebarLayout = new javax.swing.GroupLayout(Sidebar);
        Sidebar.setLayout(SidebarLayout);
        SidebarLayout.setHorizontalGroup(
            SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidebarLayout.createSequentialGroup()
                .addGroup(SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SidebarLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(SideTxt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(SidebarLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(PatientBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(DoctorBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(PharmacyBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(AppoinmentBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ReportsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(NotiPharmacistsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                            .addComponent(Homebtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NotiPatientBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE))
                        .addGap(0, 16, Short.MAX_VALUE)))
                .addContainerGap())
        );
        SidebarLayout.setVerticalGroup(
            SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(SideTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Homebtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PatientBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(DoctorBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PharmacyBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AppoinmentBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ReportsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NotiPharmacistsBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NotiPatientBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(Sidebar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Buttons, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TableScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TableScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Buttons, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(Sidebar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomebtnActionPerformed
        // Close the current window (PharmacyView)
    this.dispose();
    
    // Create and show the Home window
    Home homeFrame = new Home();  // Make sure Home.java is properly defined
    homeFrame.setVisible(true);
    }//GEN-LAST:event_HomebtnActionPerformed

    private void PharmacyBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PharmacyBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PharmacyBtnActionPerformed

    private void AppoinmentBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomebtnActionPerformed
        // Close the current window (PharmacyView)


        // Create and show the Home window
        AppointmentBookingForm app = new AppointmentBookingForm();  // Make sure Home.java is properly defined
        app.setVisible(true);
    }//GEN-LAST:event_HomebtnActionPerformed
    private void PatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomebtnActionPerformed
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                // Create an instance of PatientMain
                PatientMain patientMain = new PatientMain();

                // Call the main method to display the PatientView
                patientMain.main(new String[0]);

                // Optionally close the current window (Home)

                // Or you can dispose of it to free up resources
                // Home.this.dispose();
            }
        });
    }//GEN-LAST:event_HomebtnActionPerformed


    private void ReportsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportsBtnActionPerformed
        // Create an instance of DoctorView
        MainUI mainui = new MainUI();

        // Set DoctorView visible
        mainui.setVisible(true);

        // Optionally close the current window (Home)
        this.setVisible(false); // This hides the current window
        // Or you can dispose of it to free up resources
        // this.dispose();//Hi
    }//GEN-LAST:event_ReportsBtnActionPerformed


    private void NotiPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotiPatientBtnActionPerformed
        // Create an instance of LowStockNotificationView
        LowStockNotificationView lowStockNotificationView = new LowStockNotificationView();

        // Make the LowStockNotificationView visible
        lowStockNotificationView.setVisible(true);
    }//GEN-LAST:event_NotiPatientBtnActionPerformed
    private void NotiPharmacistsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NotiPatientBtnActionPerformed
        // Create an instance of LowStockNotificationView
        AppointmentViewer AppointmentVi = new AppointmentViewer(1);

        // Make the LowStockNotificationView visible
        AppointmentVi.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_NotiPatientBtnActionPerformed

    private void SearchBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBoxActionPerformed
       // Trigger the search functionality when "Enter" is pressed in the SearchBox
    SearchBtnActionPerformed(evt);
    }//GEN-LAST:event_SearchBoxActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // Get the search query from the SearchBox
    String query = SearchBox.getText().trim().toLowerCase();

    if (query.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter an ID or Name to search.");
        return;
    }

    // Clear the table before displaying the search results
    DefaultTableModel model = (DefaultTableModel) Table.getModel();
    model.setRowCount(0);

    // Search for matching items in the inventory
    boolean matchFound = false;
    for (PharmacyItem item : controller.getInventory()) {
        if (String.valueOf(item.getId()).toLowerCase().contains(query) || 
            item.getName().toLowerCase().contains(query)) {
            // Add matching rows to the table
            model.addRow(new Object[]{item.getId(), item.getName(), item.getQuantity(), item.getPrice(), item.getExpDate()});
            matchFound = true;
        }
    }

    if (!matchFound) {
        JOptionPane.showMessageDialog(this, "No matching items found.");
    }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
       // Clear the SearchBox
    SearchBox.setText("");

    // Refresh the table with all data
    updateTable();
    }//GEN-LAST:event_btnResetActionPerformed

    private void DoctorBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DoctorBtnActionPerformed
        // Create an instance of DoctorView
        Doctorview doctorView = new Doctorview();

        // Set DoctorView visible
        doctorView.setVisible(true);

        // Optionally close the current window (Home)
        this.setVisible(false); // This hides the current window
        // Or you can dispose of it to free up resources
        // this.dispose();
    }//GEN-LAST:event_DoctorBtnActionPerformed
    
    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {
    int selectedRow = Table.getSelectedRow();
    if (selectedRow != -1) {
        int id = Integer.parseInt(Table.getValueAt(selectedRow, 0).toString());
        PharmacyItem existingItem = controller.getInventory().get(selectedRow);
        
        // Pass the entire inventory list to the PharmacyForm
        PharmacyForm form = new PharmacyForm(this, "Update Pharmacy Item", existingItem, controller.getInventory());
        form.setOnSaveListener(() -> {
            controller.updateItem(id, form.getPharmacyItem());
            JOptionPane.showMessageDialog(this, "Item Updated Successfully.");
            updateTable();
        });
        form.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Please select an item to update.");
    }
    }

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {
    // Create a new PharmacyItem with default values for adding
    PharmacyItem newItem = new PharmacyItem(0, "", 0, 0.0, "");
    
    // Pass the entire inventory list to the PharmacyForm
    PharmacyForm form = new PharmacyForm(this, "Add Pharmacy Item", newItem, controller.getInventory());
    form.setOnSaveListener(() -> {
        controller.addItem(form.getPharmacyItem());
        JOptionPane.showMessageDialog(this, "Item Added Successfully.");
        updateTable();
    });
    form.setVisible(true);
    }


    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {
        // Logic for delete button (can implement confirmation dialog before delete)
        int selectedRow = Table.getSelectedRow();
        if (selectedRow != -1) {
            int id = Integer.parseInt(Table.getValueAt(selectedRow, 0).toString());
            controller.deleteItem(id);
            JOptionPane.showMessageDialog(this, "Item Deleted Successfully.");
            updateTable();
        } else {
            JOptionPane.showMessageDialog(this, "Please select an item to delete.");
        }
    }

    private void updateTable() {
    DefaultTableModel model = (DefaultTableModel) Table.getModel();
    model.setRowCount(0); // Clear existing rows
    for (PharmacyItem item : controller.getInventory()) {
        model.addRow(new Object[]{item.getId(), item.getName(), item.getQuantity(), item.getPrice(), item.getExpDate()});
    }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PharmacyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PharmacyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PharmacyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PharmacyView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PharmacyView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JButton AppoinmentBtn;
    private javax.swing.JPanel Buttons;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton DoctorBtn;
    private javax.swing.JPanel Header;
    private javax.swing.JLabel HeaderTxt;
    private javax.swing.JButton Homebtn;
    private javax.swing.JButton NotiPatientBtn;
    private javax.swing.JButton NotiPharmacistsBtn;
    private javax.swing.JButton PatientBtn;
    private javax.swing.JButton PharmacyBtn;
    private javax.swing.JButton ReportsBtn;
    private javax.swing.JTextField SearchBox;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JLabel SideTxt;
    private javax.swing.JPanel Sidebar;
    private javax.swing.JTable Table;
    private javax.swing.JScrollPane TableScrollPane1;
    private javax.swing.JButton UpdateBtn;
    private javax.swing.JButton btnReset;
    // End of variables declaration//GEN-END:variables
}
